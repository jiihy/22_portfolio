// border-radius
@mixin radius ($radius) {
	border-radius: $radius;
	-webkit-border-radius: $radius;
}

// background-size
@mixin background-size($size) {
	-webkit-background-size: $size;
	background-size: $size;
}

//box-sizing
@mixin box-sizing() {
	box-sizing: border-box;
	-webkit-box-sizing: border-box;
}

// clear
@mixin clear {
	&:after {
		content: '';
		display: block;
		clear: both;
	}
}

//ellipsis
@mixin ellipsis ($lines:null, $max-height: null) {
	@if($lines==null) {
		overflow: hidden;
		display: block;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	@else {
		overflow: hidden;
		display: block;
		display: -webkit-box;
		max-height: $max-height;
		text-overflow: ellipsis;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: $lines;
	}
}


//Flexbox display
@mixin flexbox {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

//Inline flex display
@mixin inline-flex {
	display: -webkit-inline-box;
	display: -moz-inline-box;
	display: -webkit-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

//flex-direction
@mixin flex-direction($value: row) {
	@if $value==row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
	}

	@else if $value==column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
	}

	@else if $value==column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
	}

	@else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
	}

	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}

//justify-content
@mixin flex_justify($properties) {
	@if $properties=='flex-start' {
		-webkit-justify-content: flex-start;
		-ms-flex-pack: start;
		justify-content: flex-start;
	}

	@else if $properties=='flex-end' {
		-webkit-justify-content: flex-end;
		-ms-flex-pack: end;
		justify-content: flex-end;
	}

	@else if $properties=='center' {
		-webkit-justify-content: center;
		-ms-flex-pack: center;
		justify-content: center;
	}

	@else if $properties=='space-between' {
		-webkit-justify-content: space-between;
		-ms-flex-pack: justify;
		justify-content: space-between;
	}

	@else if $properties=='space-around' {
		-webkit-justify-content: space-around;
		-ms-flex-pack: distribute;
		justify-content: space-around;
	}
}

//align-items
@mixin flex_align_items($properties) {
	@if $properties=='flex-start' {
		-webkit-align-items: flex-start;
		-ms-flex-align: start;
		align-items: flex-start;
	}

	@else if $properties=='flex-end' {
		-webkit-align-items: flex-end;
		-ms-flex-align: end;
		align-items: flex-end;
	}

	@else if $properties=='center' {
		-webkit-align-items: center;
		-ms-flex-align: center;
		align-items: center;
	}

	@else if $properties=='baseline' {
		-webkit-align-items: baseline;
		-ms-flex-align: baseline;
		align-items: baseline;
	}

	@else if $properties=='stretch' {
		-webkit-align-items: stretch;
		-ms-flex-align: stretch;
		align-items: stretch;
	}
}

//flex center
@mixin flex_center() {
	@include flexbox;
	@include flex_align_items(center);
	@include flex_justify(center);
}

// flex: value
@mixin flex($value) {
	-webkit-box-flex: $value;
	-ms-flex: $value;
	-webkit-flex: $value;
	flex: $value;
}

@mixin display-grid {
	display: -ms-grid;
	display: grid;
}

@mixin grid-template-columns($columns...) {
	-ms-grid-columns: $columns;
	grid-template-columns: $columns;
}

@mixin grid-template-rows($rows...) {
	-ms-grid-rows: $rows;
	grid-template-rows: $rows;
}

@mixin grid-column($col-start, $col-end) {
	-ms-grid-column: $col-start;
	-ms-grid-column-span: $col-end - $col-start;
	grid-column: #{$col-start} / #{$col-end};
}

@mixin grid-row($row-start, $row-end) {
	-ms-grid-row: $row-start;
	-ms-grid-row-span: $row-end - $row-start;
	grid-row: #{$row-start} / #{$row-end};
}

//breakpoint ( PC first : 1599-1280)
@mixin breakpoint($point) {

	//mobile320
	@if $point==mob320 {
		@media only screen and (max-width: 374px) {
			@content;
		}
	}

	//mobile375(767 ~ 375)
	@if $point==mob {
		@media only screen and (max-width: 767px) {
			@content;
		}
	}

	//tablet(1023 ~ 768)
	@if $point==tab {
		@media only screen and (max-width: 1023px) {
			@content;
		}
	}

	//tablet pro(1599 ~ 1024)
	@if $point==tabPro {
		@media only screen and (max-width: 1599px) {
			@content;
		}
	}

	//pc
	@if $point==pc {
		@media only screen and (min-width: 1600px) {
			@content;
		}
	}
}

@mixin fadeInUp($value, $duration) {
	-webkit-transform: translateY($value);
	-ms-transform: translateY($value);
	transform: translateY($value);
	will-change: transform, transition, opacity;
	opacity: 0;

	-webkit-transition: opacity $duration ease-in-out, -webkit-transform $duration ease-in-out;
	transition: opacity $duration ease-in-out, -webkit-transform $duration ease-in-out;
	transition: opacity $duration ease-in-out, transform $duration ease-in-out;
}